# Based on checkpatch requirements.
# TODO adds space after unary -

code_width = 80

indent_with_tabs = 0  # 1=indent to level only, 2=indent with tabs
input_tab_size  = 2  # original tab size
output_tab_size  = 2  # new tab size
indent_columns  = output_tab_size

indent_label  = 1  # pos: absolute col, neg: relative column
#indent_paren_close = 2  # default 1

#
# inter-symbol newlines
#

nl_enum_brace  = remove # "enum {" vs "enum \n {"
nl_union_brace  = remove # "union {" vs "union \n {"
nl_struct_brace  = remove # "struct {" vs "struct \n {"
nl_do_brace   = remove # "do {" vs "do \n {"
nl_if_brace   = remove # "if () {" vs "if () \n {"
nl_for_brace   = remove # "for () {" vs "for () \n {"
nl_else_brace   = remove # "else {" vs "else \n {"
nl_while_brace   = remove # "while () {" vs "while () \n {"
nl_switch_brace  = remove # "switch () {" vs "switch () \n {"
nl_brace_while  = remove # "} while" vs "} \n while" - cuddle while
nl_brace_else  = remove # "} else" vs "} \n else" - cuddle else
nl_func_var_def_blk = 1
nl_fcall_brace  = remove # "list_for_each() {" vs "list_for_each()\n{"
nl_fdef_brace  = add  # "int foo() {" vs "int foo()\n{"
# nl_after_return  = TRUE;
# nl_before_case = 1


#
# Source code modifications
#

mod_paren_on_return = remove # "return 1;" vs "return (1);"
mod_full_brace_if = add # "if (a) a--;" vs "if (a) { a--; }"
mod_full_brace_for = add # "for () a--;" vs "for () { a--; }"
mod_full_brace_do = add # "do a--; while ();" vs "do { a--; } while ();"
mod_full_brace_while = add # "while (a) a--;" vs "while (a) { a--; }"
mod_full_brace_nl = 3  # don't remove if more than 3 newlines


#
# inter-character spacing options
#

# sp_return_paren = force  # "return (1);" vs "return(1);"
sp_sizeof_paren  = remove # "sizeof (int)" vs "sizeof(int)"
sp_before_sparen = force  # "if (" vs "if("
sp_after_sparen  = force  # "if () {" vs "if (){"
sp_after_cast  = remove # "(int) a" vs "(int)a"
sp_inside_braces = add  # "{ 1 }" vs "{1}"
sp_inside_braces_struct = add  # "{ 1 }" vs "{1}"
sp_inside_braces_enum = add  # "{ 1 }" vs "{1}"
sp_assign  = add
sp_arith  = add
sp_bool   = add
sp_compare  = add
sp_assign  = add
sp_after_comma  = add
sp_func_def_paren = remove # "int foo (){" vs "int foo(){"
sp_func_call_paren = remove # "foo (" vs "foo("
sp_func_proto_paren = remove # "int foo ();" vs "int foo();"

sp_else_brace = add
sp_brace_else = add

sp_before_ptr_star=add
sp_after_ptr_star=remove


#
# Aligning stuff
#

align_with_tabs  = false   # don't use tabs to align
align_on_tabstop = false
# align_keep_tabs  = true
align_enum_equ_span  = 4  # '=' in enum definition
# align_nl_cont  = TRUE
# align_var_def_span = 2
# align_var_def_inline = TRUE
# align_var_def_star = FALSE
# align_var_def_colon = TRUE
# align_assign_span = 1
align_struct_init_span = 3  # align stuff in a structure init '= { }'
align_right_cmt_span = 3
# align_pp_define_span = 8;
# align_pp_define_gap = 4;

# cmt_star_cont  = FALSE

# indent_brace  = 0
